<!DOCTYPE html>
<!-- saved from url=(0083)https://learn.arcade.academy/chapters/21_shooting_sprites/shooting_sprites.html#id3 -->
<html class="writer-html5" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  
  
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>24. Using Sprites to Shoot â€” Arcade 2020 documentation</title>
  

  
  <link rel="stylesheet" href="./laserBlue01_files/theme.css" type="text/css">
  <link rel="stylesheet" href="./laserBlue01_files/pygments.css" type="text/css">
  <link rel="stylesheet" href="./laserBlue01_files/copybutton.css" type="text/css">
  <link rel="stylesheet" href="./laserBlue01_files/custom.css" type="text/css">
  <link rel="stylesheet" href="./laserBlue01_files/ideal-image-slider.min.css" type="text/css">
  <link rel="stylesheet" href="./laserBlue01_files/default.min.css" type="text/css">

  
  
  
  

  
  <!--[if lt IE 9]>
    <script src="../../_static/js/html5shiv.min.js"></script>
  <![endif]-->
  
    
      <script type="text/javascript" id="documentation_options" data-url_root="../../" src="./laserBlue01_files/documentation_options.js.download"></script>
        <script src="./laserBlue01_files/jquery.js.download"></script>
        <script src="./laserBlue01_files/underscore.js.download"></script>
        <script src="./laserBlue01_files/doctools.js.download"></script>
        <script src="./laserBlue01_files/language_data.js.download"></script>
        <script src="./laserBlue01_files/clipboard.min.js.download"></script>
        <script src="./laserBlue01_files/copybutton.js.download"></script>
        
    
    <script type="text/javascript" src="./laserBlue01_files/theme.js.download"></script>

    
    <link rel="index" title="Index" href="https://learn.arcade.academy/genindex.html">
    <link rel="search" title="Search" href="https://learn.arcade.academy/search.html">
    <link rel="next" title="25. Sprites and Walls" href="https://learn.arcade.academy/chapters/22_sprites_and_walls/sprites_and_walls.html">
    <link rel="prev" title="23. Debugging Programs" href="https://learn.arcade.academy/chapters/20_debugging/debugging.html"> 
<script type="text/javascript" async="" src="./laserBlue01_files/MathJax.js.download"></script><style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Menu_Button .MathJax_Hover_Arrow {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 4px; -webkit-border-radius: 4px; -moz-border-radius: 4px; -khtml-border-radius: 4px; font-family: 'Courier New',Courier; font-size: 9px; color: #F0F0F0}
.MathJax_Menu_Button .MathJax_Hover_Arrow span {display: block; background-color: #AAA; border: 1px solid; border-radius: 3px; line-height: 0; padding: 4px}
.MathJax_Hover_Arrow:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_Hover_Arrow:hover span {background-color: #CCC!important}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_About.MathJax_MousePost {outline: none}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 2px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 2px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; padding-top: .25em; color: #666666; font-size: .75em}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: 1em}
.MathJax_MenuRadioCheck.RTL {right: 1em; left: auto}
.MathJax_MenuLabel {padding: 2px 2em 4px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #CCCCCC; margin: 4px 1px 0px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: Highlight; color: HighlightText}
.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus {background-color: #E8E8E8}
.MathJax_ContextMenu:focus {outline: none}
.MathJax_ContextMenu .MathJax_MenuItem:focus {outline: none}
#MathJax_AboutClose {top: .2em; right: .2em}
.MathJax_Menu .MathJax_MenuClose {top: -10px; left: -10px}
.MathJax_MenuClose {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; font-family: 'Courier New',Courier; font-size: 24px; color: #F0F0F0}
.MathJax_MenuClose span {display: block; background-color: #AAA; border: 1.5px solid; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; line-height: 0; padding: 8px 0 6px}
.MathJax_MenuClose:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_MenuClose:hover span {background-color: #CCC!important}
.MathJax_MenuClose:hover:focus {outline: none}
</style><style type="text/css">.MathJax_Preview .MJXf-math {color: inherit!important}
</style><style type="text/css">.MJX_Assistive_MathML {position: absolute!important; top: 0; left: 0; clip: rect(1px, 1px, 1px, 1px); padding: 1px 0 0 0!important; border: 0!important; height: 1px!important; width: 1px!important; overflow: hidden!important; display: block!important; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none}
.MJX_Assistive_MathML.MJX_Assistive_MathML_Block {width: 100%!important}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; -webkit-box-sizing: content-box; -moz-box-sizing: content-box; box-sizing: content-box; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><style type="text/css">.MJXp-script {font-size: .8em}
.MJXp-right {-webkit-transform-origin: right; -moz-transform-origin: right; -ms-transform-origin: right; -o-transform-origin: right; transform-origin: right}
.MJXp-bold {font-weight: bold}
.MJXp-italic {font-style: italic}
.MJXp-scr {font-family: MathJax_Script,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-frak {font-family: MathJax_Fraktur,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-sf {font-family: MathJax_SansSerif,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-cal {font-family: MathJax_Caligraphic,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-mono {font-family: MathJax_Typewriter,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-largeop {font-size: 150%}
.MJXp-largeop.MJXp-int {vertical-align: -.2em}
.MJXp-math {display: inline-block; line-height: 1.2; text-indent: 0; font-family: 'Times New Roman',Times,STIXGeneral,serif; white-space: nowrap; border-collapse: collapse}
.MJXp-display {display: block; text-align: center; margin: 1em 0}
.MJXp-math span {display: inline-block}
.MJXp-box {display: block!important; text-align: center}
.MJXp-box:after {content: " "}
.MJXp-rule {display: block!important; margin-top: .1em}
.MJXp-char {display: block!important}
.MJXp-mo {margin: 0 .15em}
.MJXp-mfrac {margin: 0 .125em; vertical-align: .25em}
.MJXp-denom {display: inline-table!important; width: 100%}
.MJXp-denom > * {display: table-row!important}
.MJXp-surd {vertical-align: top}
.MJXp-surd > * {display: block!important}
.MJXp-script-box > *  {display: table!important; height: 50%}
.MJXp-script-box > * > * {display: table-cell!important; vertical-align: top}
.MJXp-script-box > *:last-child > * {vertical-align: bottom}
.MJXp-script-box > * > * > * {display: block!important}
.MJXp-mphantom {visibility: hidden}
.MJXp-munderover, .MJXp-munder {display: inline-table!important}
.MJXp-over {display: inline-block!important; text-align: center}
.MJXp-over > * {display: block!important}
.MJXp-munderover > *, .MJXp-munder > * {display: table-row!important}
.MJXp-mtable {vertical-align: .25em; margin: 0 .125em}
.MJXp-mtable > * {display: inline-table!important; vertical-align: middle}
.MJXp-mtr {display: table-row!important}
.MJXp-mtd {display: table-cell!important; text-align: center; padding: .5em 0 0 .5em}
.MJXp-mtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-mlabeledtr {display: table-row!important}
.MJXp-mlabeledtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mlabeledtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MJXp-scale0 {-webkit-transform: scaleX(.0); -moz-transform: scaleX(.0); -ms-transform: scaleX(.0); -o-transform: scaleX(.0); transform: scaleX(.0)}
.MJXp-scale1 {-webkit-transform: scaleX(.1); -moz-transform: scaleX(.1); -ms-transform: scaleX(.1); -o-transform: scaleX(.1); transform: scaleX(.1)}
.MJXp-scale2 {-webkit-transform: scaleX(.2); -moz-transform: scaleX(.2); -ms-transform: scaleX(.2); -o-transform: scaleX(.2); transform: scaleX(.2)}
.MJXp-scale3 {-webkit-transform: scaleX(.3); -moz-transform: scaleX(.3); -ms-transform: scaleX(.3); -o-transform: scaleX(.3); transform: scaleX(.3)}
.MJXp-scale4 {-webkit-transform: scaleX(.4); -moz-transform: scaleX(.4); -ms-transform: scaleX(.4); -o-transform: scaleX(.4); transform: scaleX(.4)}
.MJXp-scale5 {-webkit-transform: scaleX(.5); -moz-transform: scaleX(.5); -ms-transform: scaleX(.5); -o-transform: scaleX(.5); transform: scaleX(.5)}
.MJXp-scale6 {-webkit-transform: scaleX(.6); -moz-transform: scaleX(.6); -ms-transform: scaleX(.6); -o-transform: scaleX(.6); transform: scaleX(.6)}
.MJXp-scale7 {-webkit-transform: scaleX(.7); -moz-transform: scaleX(.7); -ms-transform: scaleX(.7); -o-transform: scaleX(.7); transform: scaleX(.7)}
.MJXp-scale8 {-webkit-transform: scaleX(.8); -moz-transform: scaleX(.8); -ms-transform: scaleX(.8); -o-transform: scaleX(.8); transform: scaleX(.8)}
.MJXp-scale9 {-webkit-transform: scaleX(.9); -moz-transform: scaleX(.9); -ms-transform: scaleX(.9); -o-transform: scaleX(.9); transform: scaleX(.9)}
.MathJax_PHTML .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style></head>

<body class="wy-body-for-nav"><div id="MathJax_Message" style="display: none;"></div>

   
  <div class="wy-grid-for-nav">
    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search">
          

          
            <a href="https://learn.arcade.academy/index.html" class="icon icon-home" alt="Documentation Home"> Arcade
          

          
          </a>

          
            
            
              <div class="version">
                2020
              </div>
            
          

          
<div role="search">
  <form id="rtd-search-form" class="wy-form" action="https://learn.arcade.academy/search.html" method="get">
    <input type="text" name="q" placeholder="Search docs">
    <input type="hidden" name="check_keywords" value="yes">
    <input type="hidden" name="area" value="default">
  </form>
</div>

          
        </div>

        
        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
            
            
              
            
            
              <ul class="current">
<li class="toctree-l1 current"><a class="reference internal" href="https://learn.arcade.academy/chapters/index.html"><span class="toctree-expand"></span>Chapters</a><ul class="">
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/01_foreword/foreword.html">1. Foreword</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/02_setup/setup.html">2. Setting Up Your System</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/03_version_control/index.html">3. Version Control Systems</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/04_print_statement/print_statement.html">4. The Print Function</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/05_drawing/drawing.html">5. How to Draw with Your Computer</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/06_what_is_a_programming_language/index.html">6. What is a Programming Language?</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/07_expressions/expressions.html">7. Variables and Expressions</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/08_functions/functions.html">8. Creating Functions</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/09_drawing_with_functions/drawing_with_functions.html">9. Drawing With Functions</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/10_if_statements/if_statements.html">10. If Statements</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/11a_for_loops/for_loops.html">11. For Loops</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/11b_while_loops/while_loops.html">12. While Loops</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/11c_random_numbers/random_numbers.html">13. Random Numbers</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/12_advanced_looping/advanced_looping.html">14. Advanced Looping</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/13_lists/lists.html">15. Introduction to Lists</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/14_classes/classes.html">16. Classes, Constructors, and Attributes</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/14b_class_methods/class_methods.html">17. Class Methods</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/15_window_class/window_class.html">18. Using the Window Class</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/16_user_control/user_control.html">19. User Control</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/17_sounds/sounds.html">20. Sound Effects</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/18_sprites_and_collisions/sprites.html">21. Sprites And Collisions</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/19_moving_sprites/moving_sprites.html">22. Moving Sprites</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/20_debugging/debugging.html">23. Debugging Programs</a></li>
<li class="toctree-l2 current"><a class="reference internal" href="https://learn.arcade.academy/chapters/21_shooting_sprites/shooting_sprites.html#"><span class="toctree-expand"></span>24. Using Sprites to Shoot</a><ul>
<li class="toctree-l3 current"><a class="reference internal current" href="https://learn.arcade.academy/chapters/21_shooting_sprites/shooting_sprites.html#getting-started">24.1. Getting Started</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://learn.arcade.academy/chapters/21_shooting_sprites/shooting_sprites.html#keeping-the-player-at-the-bottom">24.2. Keeping The Player At The Bottom</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://learn.arcade.academy/chapters/21_shooting_sprites/shooting_sprites.html#moving-the-coins-up">24.3. Moving The Coins Up</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://learn.arcade.academy/chapters/21_shooting_sprites/shooting_sprites.html#set-up-bullet-list">24.4. Set Up Bullet List</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://learn.arcade.academy/chapters/21_shooting_sprites/shooting_sprites.html#creating-bullets">24.5. Creating Bullets</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://learn.arcade.academy/chapters/21_shooting_sprites/shooting_sprites.html#bullet-collisions">24.6. Bullet Collisions</a></li>
<li class="toctree-l3"><a class="reference internal" href="https://learn.arcade.academy/chapters/21_shooting_sprites/shooting_sprites.html#other-examples">24.7. Other Examples</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/22_sprites_and_walls/sprites_and_walls.html">25. Sprites and Walls</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/23_libraries_and_modules/libraries_and_modules.html">26. Libraries and Modules</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/24_searching/searching.html">27. Searching</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/25_array_backed_grids/array_backed_grids.html">28. Array-Backed Grids</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/26_platformers/platformers.html">29. Platformers</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/27_sorting/sorting.html">30. Sorting</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/28_exceptions/exceptions.html">31. Exceptions</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/29_recursion/recursion.html">32. Recursion</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/30_print_formatting/print_formatting.html">33. String Formatting</a></li>
<li class="toctree-l2"><a class="reference internal" href="https://learn.arcade.academy/chapters/xx_venv_setup/index.html">34. Setting Up a Virtual Environment In PyCharm</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="https://learn.arcade.academy/labs/index.html">Labs</a></li>
<li class="toctree-l1"><a class="reference internal" href="https://learn.arcade.academy/voice_overs.html">Voice-Over Talent</a></li>
</ul>

            
          
        </div>
        
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
          <a href="https://learn.arcade.academy/index.html">Arcade</a>
        
      </nav>


      <div class="wy-nav-content">
        
        <div class="rst-content">
        
          















<div role="navigation" aria-label="breadcrumbs navigation">

  <ul class="wy-breadcrumbs">
    
      <li><a href="https://learn.arcade.academy/index.html" class="icon icon-home"></a> Â»</li>
        
          <li><a href="https://learn.arcade.academy/chapters/index.html">Chapters</a> Â»</li>
        
      <li><span class="section-number">24. </span>Using Sprites to Shoot</li>
    
    
      <li class="wy-breadcrumbs-aside">
        
            
            <a href="https://learn.arcade.academy/_sources/chapters/21_shooting_sprites/shooting_sprites.rst.txt" rel="nofollow"> View page source</a>
          
        
      </li>
    
  </ul>

  
  <hr>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  <div class="section" id="using-sprites-to-shoot">
<h1><span class="section-number">24. </span>Using Sprites to Shoot<a class="headerlink" href="https://learn.arcade.academy/chapters/21_shooting_sprites/shooting_sprites.html#using-sprites-to-shoot" title="Permalink to this headline">Â¶</a></h1>
<p>How do we get sprites that we can shoot?</p>
<div class="figure align-default" id="id1">
<img alt="../../_images/sprites_bullet.gif" src="./laserBlue01_files/sprites_bullet.gif">
<p class="caption"><span class="caption-text">Coins shooting</span><a class="headerlink" href="https://learn.arcade.academy/chapters/21_shooting_sprites/shooting_sprites.html#id1" title="Permalink to this image">Â¶</a></p>
</div>
<div class="section" id="getting-started">
<h2><span class="section-number">24.1. </span>Getting Started<a class="headerlink" href="https://learn.arcade.academy/chapters/21_shooting_sprites/shooting_sprites.html#getting-started" title="Permalink to this headline">Â¶</a></h2>
<p>First, letâ€™s go back to a program to start with.</p>
<div class="literal-block-wrapper docutils container" id="id2">
<div class="code-block-caption"><span class="caption-text">Starting program for shooting sprites</span><a class="headerlink" href="https://learn.arcade.academy/chapters/21_shooting_sprites/shooting_sprites.html#id2" title="Permalink to this code">Â¶</a></div>
<div class="highlight-python notranslate"><table class="highlighttable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112</pre></div></td><td class="code"><div class="highlight"><pre id="codecell0"><span></span><span class="kn">import</span> <span class="nn">random</span>
<span class="kn">import</span> <span class="nn">arcade</span>

<span class="n">SPRITE_SCALING_PLAYER</span> <span class="o">=</span> <span class="mf">0.5</span>
<span class="n">SPRITE_SCALING_COIN</span> <span class="o">=</span> <span class="mf">0.2</span>
<span class="n">SPRITE_SCALING_LASER</span> <span class="o">=</span> <span class="mf">0.8</span>
<span class="n">COIN_COUNT</span> <span class="o">=</span> <span class="mi">50</span>

<span class="n">SCREEN_WIDTH</span> <span class="o">=</span> <span class="mi">800</span>
<span class="n">SCREEN_HEIGHT</span> <span class="o">=</span> <span class="mi">600</span>

<span class="n">BULLET_SPEED</span> <span class="o">=</span> <span class="mi">5</span>


<span class="k">class</span> <span class="nc">MyGame</span><span class="p">(</span><span class="n">arcade</span><span class="o">.</span><span class="n">Window</span><span class="p">):</span>
    <span class="sd">""" Main application class. """</span>

    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">""" Initializer """</span>
        <span class="c1"># Call the parent class initializer</span>
        <span class="nb">super</span><span class="p">()</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="n">SCREEN_WIDTH</span><span class="p">,</span> <span class="n">SCREEN_HEIGHT</span><span class="p">,</span> <span class="s2">"Sprites and Bullets Demo"</span><span class="p">)</span>

        <span class="c1"># Variables that will hold sprite lists</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_list</span> <span class="o">=</span> <span class="kc">None</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">coin_list</span> <span class="o">=</span> <span class="kc">None</span>

        <span class="c1"># Set up the player info</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span> <span class="o">=</span> <span class="kc">None</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">score</span> <span class="o">=</span> <span class="mi">0</span>

        <span class="c1"># Don't show the mouse cursor</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">set_mouse_visible</span><span class="p">(</span><span class="kc">False</span><span class="p">)</span>

        <span class="n">arcade</span><span class="o">.</span><span class="n">set_background_color</span><span class="p">(</span><span class="n">arcade</span><span class="o">.</span><span class="n">color</span><span class="o">.</span><span class="n">AMAZON</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">setup</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>

        <span class="sd">""" Set up the game and initialize the variables. """</span>

        <span class="c1"># Sprite lists</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_list</span> <span class="o">=</span> <span class="n">arcade</span><span class="o">.</span><span class="n">SpriteList</span><span class="p">()</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">coin_list</span> <span class="o">=</span> <span class="n">arcade</span><span class="o">.</span><span class="n">SpriteList</span><span class="p">()</span>

        <span class="c1"># Set up the player</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">score</span> <span class="o">=</span> <span class="mi">0</span>

        <span class="c1"># Image from kenney.nl</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span> <span class="o">=</span> <span class="n">arcade</span><span class="o">.</span><span class="n">Sprite</span><span class="p">(</span><span class="s2">"character.png"</span><span class="p">,</span> <span class="n">SPRITE_SCALING_PLAYER</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span><span class="o">.</span><span class="n">center_x</span> <span class="o">=</span> <span class="mi">50</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span><span class="o">.</span><span class="n">center_y</span> <span class="o">=</span> <span class="mi">70</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span><span class="p">)</span>

        <span class="c1"># Create the coins</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">COIN_COUNT</span><span class="p">):</span>

            <span class="c1"># Create the coin instance</span>
            <span class="c1"># Coin image from kenney.nl</span>
            <span class="n">coin</span> <span class="o">=</span> <span class="n">arcade</span><span class="o">.</span><span class="n">Sprite</span><span class="p">(</span><span class="s2">"coin_01.png"</span><span class="p">,</span> <span class="n">SPRITE_SCALING_COIN</span><span class="p">)</span>

            <span class="c1"># Position the coin</span>
            <span class="n">coin</span><span class="o">.</span><span class="n">center_x</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">randrange</span><span class="p">(</span><span class="n">SCREEN_WIDTH</span><span class="p">)</span>
            <span class="n">coin</span><span class="o">.</span><span class="n">center_y</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">randrange</span><span class="p">(</span><span class="n">SCREEN_HEIGHT</span><span class="p">)</span>

            <span class="c1"># Add the coin to the lists</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">coin_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">coin</span><span class="p">)</span>

        <span class="c1"># Set the background color</span>
        <span class="n">arcade</span><span class="o">.</span><span class="n">set_background_color</span><span class="p">(</span><span class="n">arcade</span><span class="o">.</span><span class="n">color</span><span class="o">.</span><span class="n">AMAZON</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">on_draw</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">"""</span>
<span class="sd">        Render the screen.</span>
<span class="sd">        """</span>

        <span class="c1"># This command has to happen before we start drawing</span>
        <span class="n">arcade</span><span class="o">.</span><span class="n">start_render</span><span class="p">()</span>

        <span class="c1"># Draw all the sprites.</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">coin_list</span><span class="o">.</span><span class="n">draw</span><span class="p">()</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_list</span><span class="o">.</span><span class="n">draw</span><span class="p">()</span>

        <span class="c1"># Render the text</span>
        <span class="n">arcade</span><span class="o">.</span><span class="n">draw_text</span><span class="p">(</span><span class="sa">f</span><span class="s2">"Score: </span><span class="si">{</span><span class="bp">self</span><span class="o">.</span><span class="n">score</span><span class="si">}</span><span class="s2">"</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="n">arcade</span><span class="o">.</span><span class="n">color</span><span class="o">.</span><span class="n">WHITE</span><span class="p">,</span> <span class="mi">14</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">on_mouse_motion</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">dx</span><span class="p">,</span> <span class="n">dy</span><span class="p">):</span>
        <span class="sd">"""</span>
<span class="sd">        Called whenever the mouse moves.</span>
<span class="sd">        """</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span><span class="o">.</span><span class="n">center_x</span> <span class="o">=</span> <span class="n">x</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span><span class="o">.</span><span class="n">center_y</span> <span class="o">=</span> <span class="n">y</span>

    <span class="k">def</span> <span class="nf">on_mouse_press</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">button</span><span class="p">,</span> <span class="n">modifiers</span><span class="p">):</span>
        <span class="sd">"""</span>
<span class="sd">        Called whenever the mouse button is clicked.</span>
<span class="sd">        """</span>
        <span class="k">pass</span>

    <span class="k">def</span> <span class="nf">update</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">delta_time</span><span class="p">):</span>
        <span class="sd">""" Movement and game logic """</span>

        <span class="c1"># Call update on all sprites</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">coin_list</span><span class="o">.</span><span class="n">update</span><span class="p">()</span>


<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="n">window</span> <span class="o">=</span> <span class="n">MyGame</span><span class="p">()</span>
    <span class="n">window</span><span class="o">.</span><span class="n">setup</span><span class="p">()</span>
    <span class="n">arcade</span><span class="o">.</span><span class="n">run</span><span class="p">()</span>


<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">"__main__"</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>
</pre><a class="copybtn o-tooltip--left" style="background-color: rgba(0, 0, 0, 0)" data-tooltip="Copy" data-clipboard-target="#codecell0">
      <img src="./laserBlue01_files/copy-button.svg" alt="Copy to clipboard">
    </a></div>
</td></tr></tbody></table></div>
</div>
<p>If you run this program, the player should move around the screen, and their
should be coins. But not much else is happening yet.</p>
<p>Next, we need a â€˜shootingâ€™ image:</p>
<div class="figure align-default" id="id3">
<img alt="../../_images/laserBlue01.png" src="./laserBlue01_files/laserBlue01.png">
<p class="caption"><span class="caption-text">laserBlue01.png</span><a class="headerlink" href="https://learn.arcade.academy/chapters/21_shooting_sprites/shooting_sprites.html#id3" title="Permalink to this image">Â¶</a></p>
</div>
<p>Download this image (originally from Kenney.nl) and make sure it is in the same
folder as your code.</p>
</div>
<div class="section" id="keeping-the-player-at-the-bottom">
<h2><span class="section-number">24.2. </span>Keeping The Player At The Bottom<a class="headerlink" href="https://learn.arcade.academy/chapters/21_shooting_sprites/shooting_sprites.html#keeping-the-player-at-the-bottom" title="Permalink to this headline">Â¶</a></h2>
<p>Right now the player can move anywhere on the screen. We want to keep that
sprite fixed to the bottom of the screen.</p>
<p>To do that, just remove the line of code for moving the player on the y-axis.
The player will keep the same y value that we set back in the <code class="docutils literal notranslate"><span class="pre">setup</span></code> method.</p>
<div class="highlight-Python notranslate"><div class="highlight"><pre id="codecell1"><span></span><span class="k">def</span> <span class="nf">on_mouse_motion</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">dx</span><span class="p">,</span> <span class="n">dy</span><span class="p">):</span>
    <span class="sd">"""</span>
<span class="sd">    Called whenever the mouse moves.</span>
<span class="sd">    """</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span><span class="o">.</span><span class="n">center_x</span> <span class="o">=</span> <span class="n">x</span>
<span class="hll">    <span class="c1"># REMOVE THIS LINE: self.player_sprite.center_y = y</span>
</span></pre><a class="copybtn o-tooltip--left" style="background-color: rgba(0, 0, 0, 0)" data-tooltip="Copy" data-clipboard-target="#codecell1">
      <img src="./laserBlue01_files/copy-button.svg" alt="Copy to clipboard">
    </a></div>
</div>
</div>
<div class="section" id="moving-the-coins-up">
<h2><span class="section-number">24.3. </span>Moving The Coins Up<a class="headerlink" href="https://learn.arcade.academy/chapters/21_shooting_sprites/shooting_sprites.html#moving-the-coins-up" title="Permalink to this headline">Â¶</a></h2>
<p>We want all the coins above the player. So we can adjust the starting y locations
to have a starting point of 150 instead of 0. That will keep them above the player.</p>
<div class="highlight-Python notranslate"><div class="highlight"><pre id="codecell2"><span></span><span class="c1"># Create the coins</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">COIN_COUNT</span><span class="p">):</span>

    <span class="c1"># Create the coin instance</span>
    <span class="c1"># Coin image from kenney.nl</span>
    <span class="n">coin</span> <span class="o">=</span> <span class="n">arcade</span><span class="o">.</span><span class="n">Sprite</span><span class="p">(</span><span class="s2">"coin_01.png"</span><span class="p">,</span> <span class="n">SPRITE_SCALING_COIN</span><span class="p">)</span>

    <span class="c1"># Position the coin</span>
    <span class="n">coin</span><span class="o">.</span><span class="n">center_x</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">randrange</span><span class="p">(</span><span class="n">SCREEN_WIDTH</span><span class="p">)</span>
<span class="hll">    <span class="n">coin</span><span class="o">.</span><span class="n">center_y</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">randrange</span><span class="p">(</span><span class="mi">150</span><span class="p">,</span> <span class="n">SCREEN_HEIGHT</span><span class="p">)</span>
</span>
    <span class="c1"># Add the coin to the lists</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">coin_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">coin</span><span class="p">)</span>
</pre><a class="copybtn o-tooltip--left" style="background-color: rgba(0, 0, 0, 0)" data-tooltip="Copy" data-clipboard-target="#codecell2">
      <img src="./laserBlue01_files/copy-button.svg" alt="Copy to clipboard">
    </a></div>
</div>
</div>
<div class="section" id="set-up-bullet-list">
<h2><span class="section-number">24.4. </span>Set Up Bullet List<a class="headerlink" href="https://learn.arcade.academy/chapters/21_shooting_sprites/shooting_sprites.html#set-up-bullet-list" title="Permalink to this headline">Â¶</a></h2>
<p>We need to create a list to manage the bullets. There are four places we need to
add this <code class="docutils literal notranslate"><span class="pre">bullet_list</span></code> code:</p>
<ul class="simple">
<li><p>Create the <code class="docutils literal notranslate"><span class="pre">bullet_list</span></code> variable (Line 26)</p></li>
<li><p>Create an instance of <code class="docutils literal notranslate"><span class="pre">SpriteList</span></code> (Line 44)</p></li>
<li><p>Draw the bullet list (Line 83)</p></li>
<li><p>Update the bullet list (Line 105)</p></li>
</ul>
<div class="literal-block-wrapper docutils container" id="id4">
<div class="code-block-caption"><span class="caption-text">Set up bullet list</span><a class="headerlink" href="https://learn.arcade.academy/chapters/21_shooting_sprites/shooting_sprites.html#id4" title="Permalink to this code">Â¶</a></div>
<div class="highlight-python notranslate"><table class="highlighttable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115</pre></div></td><td class="code"><div class="highlight"><pre id="codecell3"><span></span><span class="kn">import</span> <span class="nn">random</span>
<span class="kn">import</span> <span class="nn">arcade</span>

<span class="n">SPRITE_SCALING_PLAYER</span> <span class="o">=</span> <span class="mf">0.5</span>
<span class="n">SPRITE_SCALING_COIN</span> <span class="o">=</span> <span class="mf">0.2</span>
<span class="n">SPRITE_SCALING_LASER</span> <span class="o">=</span> <span class="mf">0.8</span>
<span class="n">COIN_COUNT</span> <span class="o">=</span> <span class="mi">50</span>

<span class="n">SCREEN_WIDTH</span> <span class="o">=</span> <span class="mi">800</span>
<span class="n">SCREEN_HEIGHT</span> <span class="o">=</span> <span class="mi">600</span>

<span class="n">BULLET_SPEED</span> <span class="o">=</span> <span class="mi">5</span>


<span class="k">class</span> <span class="nc">MyGame</span><span class="p">(</span><span class="n">arcade</span><span class="o">.</span><span class="n">Window</span><span class="p">):</span>
    <span class="sd">""" Main application class. """</span>

    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">""" Initializer """</span>
        <span class="c1"># Call the parent class initializer</span>
        <span class="nb">super</span><span class="p">()</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="n">SCREEN_WIDTH</span><span class="p">,</span> <span class="n">SCREEN_HEIGHT</span><span class="p">,</span> <span class="s2">"Sprites and Bullets Demo"</span><span class="p">)</span>

        <span class="c1"># Variables that will hold sprite lists</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_list</span> <span class="o">=</span> <span class="kc">None</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">coin_list</span> <span class="o">=</span> <span class="kc">None</span>
<span class="hll">        <span class="bp">self</span><span class="o">.</span><span class="n">bullet_list</span> <span class="o">=</span> <span class="kc">None</span>
</span>
        <span class="c1"># Set up the player info</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span> <span class="o">=</span> <span class="kc">None</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">score</span> <span class="o">=</span> <span class="mi">0</span>

        <span class="c1"># Don't show the mouse cursor</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">set_mouse_visible</span><span class="p">(</span><span class="kc">False</span><span class="p">)</span>

        <span class="n">arcade</span><span class="o">.</span><span class="n">set_background_color</span><span class="p">(</span><span class="n">arcade</span><span class="o">.</span><span class="n">color</span><span class="o">.</span><span class="n">AMAZON</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">setup</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>

        <span class="sd">""" Set up the game and initialize the variables. """</span>

        <span class="c1"># Sprite lists</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_list</span> <span class="o">=</span> <span class="n">arcade</span><span class="o">.</span><span class="n">SpriteList</span><span class="p">()</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">coin_list</span> <span class="o">=</span> <span class="n">arcade</span><span class="o">.</span><span class="n">SpriteList</span><span class="p">()</span>
<span class="hll">        <span class="bp">self</span><span class="o">.</span><span class="n">bullet_list</span> <span class="o">=</span> <span class="n">arcade</span><span class="o">.</span><span class="n">SpriteList</span><span class="p">()</span>
</span>
        <span class="c1"># Set up the player</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">score</span> <span class="o">=</span> <span class="mi">0</span>

        <span class="c1"># Image from kenney.nl</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span> <span class="o">=</span> <span class="n">arcade</span><span class="o">.</span><span class="n">Sprite</span><span class="p">(</span><span class="s2">"character.png"</span><span class="p">,</span> <span class="n">SPRITE_SCALING_PLAYER</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span><span class="o">.</span><span class="n">center_x</span> <span class="o">=</span> <span class="mi">50</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span><span class="o">.</span><span class="n">center_y</span> <span class="o">=</span> <span class="mi">70</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span><span class="p">)</span>

        <span class="c1"># Create the coins</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">COIN_COUNT</span><span class="p">):</span>

            <span class="c1"># Create the coin instance</span>
            <span class="c1"># Coin image from kenney.nl</span>
            <span class="n">coin</span> <span class="o">=</span> <span class="n">arcade</span><span class="o">.</span><span class="n">Sprite</span><span class="p">(</span><span class="s2">"coin_01.png"</span><span class="p">,</span> <span class="n">SPRITE_SCALING_COIN</span><span class="p">)</span>

            <span class="c1"># Position the coin</span>
            <span class="n">coin</span><span class="o">.</span><span class="n">center_x</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">randrange</span><span class="p">(</span><span class="n">SCREEN_WIDTH</span><span class="p">)</span>
            <span class="n">coin</span><span class="o">.</span><span class="n">center_y</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">randrange</span><span class="p">(</span><span class="mi">150</span><span class="p">,</span> <span class="n">SCREEN_HEIGHT</span><span class="p">)</span>

            <span class="c1"># Add the coin to the lists</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">coin_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">coin</span><span class="p">)</span>

        <span class="c1"># Set the background color</span>
        <span class="n">arcade</span><span class="o">.</span><span class="n">set_background_color</span><span class="p">(</span><span class="n">arcade</span><span class="o">.</span><span class="n">color</span><span class="o">.</span><span class="n">AMAZON</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">on_draw</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">"""</span>
<span class="sd">        Render the screen.</span>
<span class="sd">        """</span>

        <span class="c1"># This command has to happen before we start drawing</span>
        <span class="n">arcade</span><span class="o">.</span><span class="n">start_render</span><span class="p">()</span>

        <span class="c1"># Draw all the sprites.</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">coin_list</span><span class="o">.</span><span class="n">draw</span><span class="p">()</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_list</span><span class="o">.</span><span class="n">draw</span><span class="p">()</span>
<span class="hll">        <span class="bp">self</span><span class="o">.</span><span class="n">bullet_list</span><span class="o">.</span><span class="n">draw</span><span class="p">()</span>
</span>
        <span class="c1"># Render the text</span>
        <span class="n">arcade</span><span class="o">.</span><span class="n">draw_text</span><span class="p">(</span><span class="sa">f</span><span class="s2">"Score: </span><span class="si">{</span><span class="bp">self</span><span class="o">.</span><span class="n">score</span><span class="si">}</span><span class="s2">"</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="n">arcade</span><span class="o">.</span><span class="n">color</span><span class="o">.</span><span class="n">WHITE</span><span class="p">,</span> <span class="mi">14</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">on_mouse_motion</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">dx</span><span class="p">,</span> <span class="n">dy</span><span class="p">):</span>
        <span class="sd">"""</span>
<span class="sd">        Called whenever the mouse moves.</span>
<span class="sd">        """</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span><span class="o">.</span><span class="n">center_x</span> <span class="o">=</span> <span class="n">x</span>

    <span class="k">def</span> <span class="nf">on_mouse_press</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">button</span><span class="p">,</span> <span class="n">modifiers</span><span class="p">):</span>
        <span class="sd">"""</span>
<span class="sd">        Called whenever the mouse button is clicked.</span>
<span class="sd">        """</span>
        <span class="k">pass</span>

    <span class="k">def</span> <span class="nf">update</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">delta_time</span><span class="p">):</span>
        <span class="sd">""" Movement and game logic """</span>

        <span class="c1"># Call update on all sprites</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">coin_list</span><span class="o">.</span><span class="n">update</span><span class="p">()</span>
<span class="hll">        <span class="bp">self</span><span class="o">.</span><span class="n">bullet_list</span><span class="o">.</span><span class="n">update</span><span class="p">()</span>
</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="n">window</span> <span class="o">=</span> <span class="n">MyGame</span><span class="p">()</span>
    <span class="n">window</span><span class="o">.</span><span class="n">setup</span><span class="p">()</span>
    <span class="n">arcade</span><span class="o">.</span><span class="n">run</span><span class="p">()</span>


<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">"__main__"</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>
</pre><a class="copybtn o-tooltip--left" style="background-color: rgba(0, 0, 0, 0)" data-tooltip="Copy" data-clipboard-target="#codecell3">
      <img src="./laserBlue01_files/copy-button.svg" alt="Copy to clipboard">
    </a></div>
</td></tr></tbody></table></div>
</div>
</div>
<div class="section" id="creating-bullets">
<h2><span class="section-number">24.5. </span>Creating Bullets<a class="headerlink" href="https://learn.arcade.academy/chapters/21_shooting_sprites/shooting_sprites.html#creating-bullets" title="Permalink to this headline">Â¶</a></h2>
<p>We need to
create bullets when the user presses the mouse button. We can add an
<code class="docutils literal notranslate"><span class="pre">on_mouse_press</span></code> method to do something when the user presses the mouse button:</p>
<div class="highlight-Python notranslate"><div class="highlight"><pre id="codecell4"><span></span><span class="k">def</span> <span class="nf">on_mouse_press</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">button</span><span class="p">,</span> <span class="n">modifiers</span><span class="p">):</span>

    <span class="c1"># Create a bullet</span>
    <span class="n">bullet</span> <span class="o">=</span> <span class="n">arcade</span><span class="o">.</span><span class="n">Sprite</span><span class="p">(</span><span class="s2">"laserBlue01.png"</span><span class="p">,</span> <span class="n">SPRITE_SCALING_LASER</span><span class="p">)</span>

    <span class="c1"># Add the bullet to the appropriate list</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">bullet_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">bullet</span><span class="p">)</span>
</pre><a class="copybtn o-tooltip--left" style="background-color: rgba(0, 0, 0, 0)" data-tooltip="Copy" data-clipboard-target="#codecell4">
      <img src="./laserBlue01_files/copy-button.svg" alt="Copy to clipboard">
    </a></div>
</div>
<p>This will create a bullet, but the bullet will default to the lower left corner.
You can just barely see it.</p>
<p>We can give the bullet a position:</p>
<div class="highlight-Python notranslate"><div class="highlight"><pre id="codecell5"><span></span><span class="k">def</span> <span class="nf">on_mouse_press</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">button</span><span class="p">,</span> <span class="n">modifiers</span><span class="p">):</span>

    <span class="c1"># Create a bullet</span>
    <span class="n">bullet</span> <span class="o">=</span> <span class="n">arcade</span><span class="o">.</span><span class="n">Sprite</span><span class="p">(</span><span class="s2">"laserBlue01.png"</span><span class="p">,</span> <span class="n">SPRITE_SCALING_LASER</span><span class="p">)</span>

<span class="hll">    <span class="n">bullet</span><span class="o">.</span><span class="n">center_x</span> <span class="o">=</span> <span class="n">x</span>
</span><span class="hll">    <span class="n">bullet</span><span class="o">.</span><span class="n">center_y</span> <span class="o">=</span> <span class="n">y</span>
</span>
    <span class="c1"># Add the bullet to the appropriate list</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">bullet_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">bullet</span><span class="p">)</span>
</pre><a class="copybtn o-tooltip--left" style="background-color: rgba(0, 0, 0, 0)" data-tooltip="Copy" data-clipboard-target="#codecell5">
      <img src="./laserBlue01_files/copy-button.svg" alt="Copy to clipboard">
    </a></div>
</div>
<p>But this isnâ€™t what we want either. The code above puts the laser where we click
the mouse. We want the laser to be where the player is. Thatâ€™s easy:</p>
<div class="highlight-Python notranslate"><div class="highlight"><pre id="codecell6"><span></span><span class="k">def</span> <span class="nf">on_mouse_press</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">button</span><span class="p">,</span> <span class="n">modifiers</span><span class="p">):</span>

    <span class="c1"># Create a bullet</span>
    <span class="n">bullet</span> <span class="o">=</span> <span class="n">arcade</span><span class="o">.</span><span class="n">Sprite</span><span class="p">(</span><span class="s2">"laserBlue01.png"</span><span class="p">,</span> <span class="n">SPRITE_SCALING_LASER</span><span class="p">)</span>

<span class="hll">    <span class="n">bullet</span><span class="o">.</span><span class="n">center_x</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span><span class="o">.</span><span class="n">center_x</span>
</span><span class="hll">    <span class="n">bullet</span><span class="o">.</span><span class="n">center_y</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span><span class="o">.</span><span class="n">center_y</span>
</span>
    <span class="c1"># Add the bullet to the appropriate list</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">bullet_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">bullet</span><span class="p">)</span>
</pre><a class="copybtn o-tooltip--left" style="background-color: rgba(0, 0, 0, 0)" data-tooltip="Copy" data-clipboard-target="#codecell6">
      <img src="./laserBlue01_files/copy-button.svg" alt="Copy to clipboard">
    </a></div>
</div>
<p>We can even start the bullet a bit ABOVE the player:</p>
<div class="highlight-Python notranslate"><div class="highlight"><pre id="codecell7"><span></span><span class="k">def</span> <span class="nf">on_mouse_press</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">button</span><span class="p">,</span> <span class="n">modifiers</span><span class="p">):</span>

    <span class="c1"># Create a bullet</span>
    <span class="n">bullet</span> <span class="o">=</span> <span class="n">arcade</span><span class="o">.</span><span class="n">Sprite</span><span class="p">(</span><span class="s2">"laserBlue01.png"</span><span class="p">,</span> <span class="n">SPRITE_SCALING_LASER</span><span class="p">)</span>

<span class="hll">    <span class="n">bullet</span><span class="o">.</span><span class="n">center_x</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span><span class="o">.</span><span class="n">center_x</span>
</span><span class="hll">    <span class="n">bullet</span><span class="o">.</span><span class="n">center_y</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span><span class="o">.</span><span class="n">center_y</span> <span class="o">+</span> <span class="mi">30</span>
</span>
    <span class="c1"># Add the bullet to the appropriate list</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">bullet_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">bullet</span><span class="p">)</span>
</pre><a class="copybtn o-tooltip--left" style="background-color: rgba(0, 0, 0, 0)" data-tooltip="Copy" data-clipboard-target="#codecell7">
      <img src="./laserBlue01_files/copy-button.svg" alt="Copy to clipboard">
    </a></div>
</div>
<p>We can make the bullet move up using the constant <code class="docutils literal notranslate"><span class="pre">BULLET_SPEED</span></code> which
we set to 5 at the top of the program:</p>
<div class="highlight-Python notranslate"><div class="highlight"><pre id="codecell8"><span></span><span class="k">def</span> <span class="nf">on_mouse_press</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">button</span><span class="p">,</span> <span class="n">modifiers</span><span class="p">):</span>

    <span class="c1"># Create a bullet</span>
    <span class="n">bullet</span> <span class="o">=</span> <span class="n">arcade</span><span class="o">.</span><span class="n">Sprite</span><span class="p">(</span><span class="s2">"laserBlue01.png"</span><span class="p">,</span> <span class="n">SPRITE_SCALING_LASER</span><span class="p">)</span>

    <span class="n">bullet</span><span class="o">.</span><span class="n">center_x</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span><span class="o">.</span><span class="n">center_x</span>
    <span class="n">bullet</span><span class="o">.</span><span class="n">center_y</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span><span class="o">.</span><span class="n">center_y</span> <span class="o">+</span> <span class="mi">30</span>
<span class="hll">    <span class="n">bullet</span><span class="o">.</span><span class="n">change_y</span> <span class="o">=</span> <span class="n">BULLET_SPEED</span>
</span>
    <span class="c1"># Add the bullet to the appropriate list</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">bullet_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">bullet</span><span class="p">)</span>
</pre><a class="copybtn o-tooltip--left" style="background-color: rgba(0, 0, 0, 0)" data-tooltip="Copy" data-clipboard-target="#codecell8">
      <img src="./laserBlue01_files/copy-button.svg" alt="Copy to clipboard">
    </a></div>
</div>
<p>We can rotate the bullet so it isnâ€™t sideways using the <code class="docutils literal notranslate"><span class="pre">angle</span></code> attribute
built into the <code class="docutils literal notranslate"><span class="pre">Sprite</span></code> class:</p>
<div class="highlight-Python notranslate"><div class="highlight"><pre id="codecell9"><span></span><span class="k">def</span> <span class="nf">on_mouse_press</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">button</span><span class="p">,</span> <span class="n">modifiers</span><span class="p">):</span>

    <span class="c1"># Create a bullet</span>
    <span class="n">bullet</span> <span class="o">=</span> <span class="n">arcade</span><span class="o">.</span><span class="n">Sprite</span><span class="p">(</span><span class="s2">"laserBlue01.png"</span><span class="p">,</span> <span class="n">SPRITE_SCALING_LASER</span><span class="p">)</span>

    <span class="n">bullet</span><span class="o">.</span><span class="n">center_x</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span><span class="o">.</span><span class="n">center_x</span>
    <span class="n">bullet</span><span class="o">.</span><span class="n">center_y</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span><span class="o">.</span><span class="n">center_y</span> <span class="o">+</span> <span class="mi">30</span>
    <span class="n">bullet</span><span class="o">.</span><span class="n">change_y</span> <span class="o">=</span> <span class="n">BULLET_SPEED</span>
<span class="hll">    <span class="n">bullet</span><span class="o">.</span><span class="n">angle</span> <span class="o">=</span> <span class="mi">90</span>
</span>
    <span class="c1"># Add the bullet to the appropriate list</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">bullet_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">bullet</span><span class="p">)</span>
</pre><a class="copybtn o-tooltip--left" style="background-color: rgba(0, 0, 0, 0)" data-tooltip="Copy" data-clipboard-target="#codecell9">
      <img src="./laserBlue01_files/copy-button.svg" alt="Copy to clipboard">
    </a></div>
</div>
</div>
<div class="section" id="bullet-collisions">
<h2><span class="section-number">24.6. </span>Bullet Collisions<a class="headerlink" href="https://learn.arcade.academy/chapters/21_shooting_sprites/shooting_sprites.html#bullet-collisions" title="Permalink to this headline">Â¶</a></h2>
<p>Now that we have bullets, how do we get them to collide with the coins?
We add the following to our applications <code class="docutils literal notranslate"><span class="pre">update</span></code> method:</p>
<div class="highlight-Python notranslate"><div class="highlight"><pre id="codecell10"><span></span><span class="c1"># Loop through each bullet</span>
<span class="k">for</span> <span class="n">bullet</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">bullet_list</span><span class="p">:</span>

    <span class="c1"># Check this bullet to see if it hit a coin</span>
    <span class="n">hit_list</span> <span class="o">=</span> <span class="n">arcade</span><span class="o">.</span><span class="n">check_for_collision_with_list</span><span class="p">(</span><span class="n">bullet</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">coin_list</span><span class="p">)</span>

    <span class="c1"># If it did, get rid of the bullet</span>
    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">hit_list</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
        <span class="n">bullet</span><span class="o">.</span><span class="n">remove_from_sprite_lists</span><span class="p">()</span>

    <span class="c1"># For every coin we hit, add to the score and remove the coin</span>
    <span class="k">for</span> <span class="n">coin</span> <span class="ow">in</span> <span class="n">hit_list</span><span class="p">:</span>
        <span class="n">coin</span><span class="o">.</span><span class="n">remove_from_sprite_lists</span><span class="p">()</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">score</span> <span class="o">+=</span> <span class="mi">1</span>

    <span class="c1"># If the bullet flies off-screen, remove it.</span>
    <span class="k">if</span> <span class="n">bullet</span><span class="o">.</span><span class="n">bottom</span> <span class="o">&gt;</span> <span class="n">SCREEN_HEIGHT</span><span class="p">:</span>
        <span class="n">bullet</span><span class="o">.</span><span class="n">remove_from_sprite_lists</span><span class="p">()</span>
</pre><a class="copybtn o-tooltip--left" style="background-color: rgba(0, 0, 0, 0)" data-tooltip="Copy" data-clipboard-target="#codecell10">
      <img src="./laserBlue01_files/copy-button.svg" alt="Copy to clipboard">
    </a></div>
</div>
<p>We loop through each bullet with a <code class="docutils literal notranslate"><span class="pre">for</span></code> loop. Then we check to see if the
bullet is hitting any of the coins. If it is, we get rid of the coin. We get
rid of the bullet.</p>
<p>We also check to see if the bullet flies off the top of the screen. If it does,
we get rid of the bullet. This is easy to forget, but if you do, it will cause
the computer to slow down because you are tracking thousands of bullets that
have long ago left the space we care about.</p>
<p>Hereâ€™s the full example:</p>
<div class="literal-block-wrapper docutils container" id="id5">
<div class="code-block-caption"><span class="caption-text">sprites_bullet.py</span><a class="headerlink" href="https://learn.arcade.academy/chapters/21_shooting_sprites/shooting_sprites.html#id5" title="Permalink to this code">Â¶</a></div>
<div class="highlight-python notranslate"><table class="highlighttable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147</pre></div></td><td class="code"><div class="highlight"><pre id="codecell11"><span></span><span class="kn">import</span> <span class="nn">random</span>
<span class="kn">import</span> <span class="nn">arcade</span>

<span class="n">SPRITE_SCALING_PLAYER</span> <span class="o">=</span> <span class="mf">0.5</span>
<span class="n">SPRITE_SCALING_COIN</span> <span class="o">=</span> <span class="mf">0.2</span>
<span class="n">SPRITE_SCALING_LASER</span> <span class="o">=</span> <span class="mf">0.8</span>
<span class="n">COIN_COUNT</span> <span class="o">=</span> <span class="mi">50</span>

<span class="n">SCREEN_WIDTH</span> <span class="o">=</span> <span class="mi">800</span>
<span class="n">SCREEN_HEIGHT</span> <span class="o">=</span> <span class="mi">600</span>

<span class="n">BULLET_SPEED</span> <span class="o">=</span> <span class="mi">5</span>


<span class="k">class</span> <span class="nc">MyGame</span><span class="p">(</span><span class="n">arcade</span><span class="o">.</span><span class="n">Window</span><span class="p">):</span>
    <span class="sd">""" Main application class. """</span>

    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">""" Initializer """</span>
        <span class="c1"># Call the parent class initializer</span>
        <span class="nb">super</span><span class="p">()</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="n">SCREEN_WIDTH</span><span class="p">,</span> <span class="n">SCREEN_HEIGHT</span><span class="p">,</span> <span class="s2">"Sprites and Bullets Demo"</span><span class="p">)</span>

        <span class="c1"># Variables that will hold sprite lists</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_list</span> <span class="o">=</span> <span class="kc">None</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">coin_list</span> <span class="o">=</span> <span class="kc">None</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">bullet_list</span> <span class="o">=</span> <span class="kc">None</span>

        <span class="c1"># Set up the player info</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span> <span class="o">=</span> <span class="kc">None</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">score</span> <span class="o">=</span> <span class="mi">0</span>

        <span class="c1"># Don't show the mouse cursor</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">set_mouse_visible</span><span class="p">(</span><span class="kc">False</span><span class="p">)</span>

        <span class="n">arcade</span><span class="o">.</span><span class="n">set_background_color</span><span class="p">(</span><span class="n">arcade</span><span class="o">.</span><span class="n">color</span><span class="o">.</span><span class="n">AMAZON</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">setup</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>

        <span class="sd">""" Set up the game and initialize the variables. """</span>

        <span class="c1"># Sprite lists</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_list</span> <span class="o">=</span> <span class="n">arcade</span><span class="o">.</span><span class="n">SpriteList</span><span class="p">()</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">coin_list</span> <span class="o">=</span> <span class="n">arcade</span><span class="o">.</span><span class="n">SpriteList</span><span class="p">()</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">bullet_list</span> <span class="o">=</span> <span class="n">arcade</span><span class="o">.</span><span class="n">SpriteList</span><span class="p">()</span>

        <span class="c1"># Set up the player</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">score</span> <span class="o">=</span> <span class="mi">0</span>

        <span class="c1"># Image from kenney.nl</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span> <span class="o">=</span> <span class="n">arcade</span><span class="o">.</span><span class="n">Sprite</span><span class="p">(</span><span class="s2">"character.png"</span><span class="p">,</span> <span class="n">SPRITE_SCALING_PLAYER</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span><span class="o">.</span><span class="n">center_x</span> <span class="o">=</span> <span class="mi">50</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span><span class="o">.</span><span class="n">center_y</span> <span class="o">=</span> <span class="mi">70</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span><span class="p">)</span>

        <span class="c1"># Create the coins</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">COIN_COUNT</span><span class="p">):</span>

            <span class="c1"># Create the coin instance</span>
            <span class="c1"># Coin image from kenney.nl</span>
            <span class="n">coin</span> <span class="o">=</span> <span class="n">arcade</span><span class="o">.</span><span class="n">Sprite</span><span class="p">(</span><span class="s2">"coin_01.png"</span><span class="p">,</span> <span class="n">SPRITE_SCALING_COIN</span><span class="p">)</span>

            <span class="c1"># Position the coin</span>
            <span class="n">coin</span><span class="o">.</span><span class="n">center_x</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">randrange</span><span class="p">(</span><span class="n">SCREEN_WIDTH</span><span class="p">)</span>
            <span class="n">coin</span><span class="o">.</span><span class="n">center_y</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">randrange</span><span class="p">(</span><span class="mi">120</span><span class="p">,</span> <span class="n">SCREEN_HEIGHT</span><span class="p">)</span>

            <span class="c1"># Add the coin to the lists</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">coin_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">coin</span><span class="p">)</span>

        <span class="c1"># Set the background color</span>
        <span class="n">arcade</span><span class="o">.</span><span class="n">set_background_color</span><span class="p">(</span><span class="n">arcade</span><span class="o">.</span><span class="n">color</span><span class="o">.</span><span class="n">AMAZON</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">on_draw</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">"""</span>
<span class="sd">        Render the screen.</span>
<span class="sd">        """</span>

        <span class="c1"># This command has to happen before we start drawing</span>
        <span class="n">arcade</span><span class="o">.</span><span class="n">start_render</span><span class="p">()</span>

        <span class="c1"># Draw all the sprites.</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">coin_list</span><span class="o">.</span><span class="n">draw</span><span class="p">()</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">bullet_list</span><span class="o">.</span><span class="n">draw</span><span class="p">()</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_list</span><span class="o">.</span><span class="n">draw</span><span class="p">()</span>

        <span class="c1"># Render the text</span>
        <span class="n">arcade</span><span class="o">.</span><span class="n">draw_text</span><span class="p">(</span><span class="sa">f</span><span class="s2">"Score: </span><span class="si">{</span><span class="bp">self</span><span class="o">.</span><span class="n">score</span><span class="si">}</span><span class="s2">"</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="n">arcade</span><span class="o">.</span><span class="n">color</span><span class="o">.</span><span class="n">WHITE</span><span class="p">,</span> <span class="mi">14</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">on_mouse_motion</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">dx</span><span class="p">,</span> <span class="n">dy</span><span class="p">):</span>
        <span class="sd">"""</span>
<span class="sd">        Called whenever the mouse moves.</span>
<span class="sd">        """</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span><span class="o">.</span><span class="n">center_x</span> <span class="o">=</span> <span class="n">x</span>

    <span class="k">def</span> <span class="nf">on_mouse_press</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">button</span><span class="p">,</span> <span class="n">modifiers</span><span class="p">):</span>
        <span class="sd">"""</span>
<span class="sd">        Called whenever the mouse button is clicked.</span>
<span class="sd">        """</span>

        <span class="c1"># Create a bullet</span>
        <span class="n">bullet</span> <span class="o">=</span> <span class="n">arcade</span><span class="o">.</span><span class="n">Sprite</span><span class="p">(</span><span class="s2">"laserBlue01.png"</span><span class="p">,</span> <span class="n">SPRITE_SCALING_LASER</span><span class="p">)</span>

        <span class="c1"># The image points to the right, and we want it to point up. So</span>
        <span class="c1"># rotate it.</span>
        <span class="n">bullet</span><span class="o">.</span><span class="n">angle</span> <span class="o">=</span> <span class="mi">90</span>

        <span class="c1"># Position the bullet</span>
        <span class="n">bullet</span><span class="o">.</span><span class="n">center_x</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span><span class="o">.</span><span class="n">center_x</span>
        <span class="n">bullet</span><span class="o">.</span><span class="n">bottom</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">player_sprite</span><span class="o">.</span><span class="n">top</span>

        <span class="c1"># Add the bullet to the appropriate lists</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">bullet_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">bullet</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">update</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">delta_time</span><span class="p">):</span>
        <span class="sd">""" Movement and game logic """</span>

        <span class="c1"># Call update on all sprites</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">coin_list</span><span class="o">.</span><span class="n">update</span><span class="p">()</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">bullet_list</span><span class="o">.</span><span class="n">update</span><span class="p">()</span>

        <span class="c1"># Loop through each bullet</span>
        <span class="k">for</span> <span class="n">bullet</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">bullet_list</span><span class="p">:</span>

            <span class="c1"># Check this bullet to see if it hit a coin</span>
            <span class="n">hit_list</span> <span class="o">=</span> <span class="n">arcade</span><span class="o">.</span><span class="n">check_for_collision_with_list</span><span class="p">(</span><span class="n">bullet</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">coin_list</span><span class="p">)</span>

            <span class="c1"># If it did, get rid of the bullet</span>
            <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">hit_list</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
                <span class="n">bullet</span><span class="o">.</span><span class="n">remove_from_sprite_lists</span><span class="p">()</span>

            <span class="c1"># For every coin we hit, add to the score and remove the coin</span>
            <span class="k">for</span> <span class="n">coin</span> <span class="ow">in</span> <span class="n">hit_list</span><span class="p">:</span>
                <span class="n">coin</span><span class="o">.</span><span class="n">remove_from_sprite_lists</span><span class="p">()</span>
                <span class="bp">self</span><span class="o">.</span><span class="n">score</span> <span class="o">+=</span> <span class="mi">1</span>

            <span class="c1"># If the bullet flies off-screen, remove it.</span>
            <span class="k">if</span> <span class="n">bullet</span><span class="o">.</span><span class="n">bottom</span> <span class="o">&gt;</span> <span class="n">SCREEN_HEIGHT</span><span class="p">:</span>
                <span class="n">bullet</span><span class="o">.</span><span class="n">remove_from_sprite_lists</span><span class="p">()</span>


<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="n">window</span> <span class="o">=</span> <span class="n">MyGame</span><span class="p">()</span>
    <span class="n">window</span><span class="o">.</span><span class="n">setup</span><span class="p">()</span>
    <span class="n">arcade</span><span class="o">.</span><span class="n">run</span><span class="p">()</span>


<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">"__main__"</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>
</pre><a class="copybtn o-tooltip--left" style="background-color: rgba(0, 0, 0, 0)" data-tooltip="Copy" data-clipboard-target="#codecell11">
      <img src="./laserBlue01_files/copy-button.svg" alt="Copy to clipboard">
    </a></div>
</td></tr></tbody></table></div>
</div>
</div>
<div class="section" id="other-examples">
<h2><span class="section-number">24.7. </span>Other Examples<a class="headerlink" href="https://learn.arcade.academy/chapters/21_shooting_sprites/shooting_sprites.html#other-examples" title="Permalink to this headline">Â¶</a></h2>
<p>Here are some other examples from <a class="reference external" href="http://arcade.academy/">Arcade Academy</a>
and its <a class="reference external" href="http://arcade.academy/examples/index.html">Example List</a>:</p>
<ul class="simple">
<li><p><a class="reference external" href="http://arcade.academy/examples/sprite_bullets_aimed.html">Aim bullets with mouse</a></p></li>
<li><p><a class="reference external" href="http://arcade.academy/examples/sprite_bullets_periodic.html">Enemies shoot periodically</a></p></li>
<li><p><a class="reference external" href="http://arcade.academy/examples/sprite_bullets_random.html">Enemies shoot at random times</a></p></li>
<li><p><a class="reference external" href="http://arcade.academy/examples/sprite_bullets_enemy_aims.html">Enemies aim at player</a></p></li>
<li><p><a class="reference external" href="http://arcade.academy/examples/sprite_explosion.html">Explosions</a></p></li>
</ul>
</div>
</div>


           </div>
           
          </div>
          <footer>
  
    <div class="rst-footer-buttons" role="navigation" aria-label="footer navigation">
      
        <a href="https://learn.arcade.academy/chapters/22_sprites_and_walls/sprites_and_walls.html" class="btn btn-neutral float-right" title="25. Sprites and Walls" accesskey="n" rel="next">Next <span class="fa fa-arrow-circle-right"></span></a>
      
      
        <a href="https://learn.arcade.academy/chapters/20_debugging/debugging.html" class="btn btn-neutral float-left" title="23. Debugging Programs" accesskey="p" rel="prev"><span class="fa fa-arrow-circle-left"></span> Previous</a>
      
    </div>
  

  <hr>

  <div role="contentinfo">
    <p>
        
        Â© Copyright 2020, Paul Vincent Craven

    </p>
  </div>
    
    
    
    Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a
    
    <a href="https://github.com/rtfd/sphinx_rtd_theme">theme</a>
    
    provided by <a href="https://readthedocs.org/">Read the Docs</a>. 

</footer>

        </div>
      </div>

    </section>

  </div>
  

  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.Navigation.enable(true);
      });
  </script>

  
  
    
   


</body></html>